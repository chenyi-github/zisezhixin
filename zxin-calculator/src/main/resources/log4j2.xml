<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<!-- monitorInterval="600"，指log4j2每隔600秒（半小时），自动监控该配置文件是否有变化，如果变化，则自动根据文件内容重新配置 -->
<Configuration status="off" monitorInterval="600">
	<!-- 行定义了一些属性 -->
    <properties>
        <property name="LOG_HOME">logs</property>
        <property name="FILE_NAME">intelligentclaim</property>
    </properties>

    <Appenders>
    	<!-- 输出到控制台 -->
        <console name="console" target="SYSTEM_OUT">
        	<!-- 输出格式 -->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" />
        </console>

		<!-- 以文件方式记录 -->
       	<!-- fileName 文件名称格式 -->
        <RollingRandomAccessFile name="debug" fileName="logs/claim-debug.log" filePattern="${LOG_HOME}/$${date:yyyy-MM}/claim-debug-%d{yyyy-MM-dd}-%i.log.gz">
          <!-- 输出格式 -->
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy />
                <!-- 表示单个文件最大多少容量，当单个文件达到10M后，会自动将以前的内容，先创建类似 2014-09（年-月）的目录，然后按 "xxx-年-月-日-序号"命名，打成压缩包 -->
                <SizeBasedTriggeringPolicy size="10MB" />
            </Policies>
            <Filters>
                <ThresholdFilter level="TRACE"/>
                <ThresholdFilter level="INFO" onMatch="DENY" onMismatch="NEUTRAL"/>
              </Filters>
            <!-- 表示压缩包，最多保留20个 -->
            <DefaultRolloverStrategy max="20" />
        </RollingRandomAccessFile>
        <RollingRandomAccessFile name="info" fileName="logs/claim-info.log" filePattern="${LOG_HOME}/$${date:yyyy-MM}/claim-info-%d{yyyy-MM-dd}-%i.log.gz">
          <!-- 输出格式 -->
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy />
                <!-- 表示单个文件最大多少容量，当单个文件达到10M后，会自动将以前的内容，先创建类似 2014-09（年-月）的目录，然后按 "xxx-年-月-日-序号"命名，打成压缩包 -->
                <SizeBasedTriggeringPolicy size="10MB" />
            </Policies>
            <Filters>
                <ThresholdFilter level="INFO"/>
                <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>
              </Filters>
            <!-- 表示压缩包，最多保留20个 -->
            <DefaultRolloverStrategy max="20" />
        </RollingRandomAccessFile>
        <RollingRandomAccessFile name="warn" fileName="logs/claim-warn.log" filePattern="${LOG_HOME}/$${date:yyyy-MM}/claim-warn-%d{yyyy-MM-dd}-%i.log.gz">
        	<!-- 输出格式 -->
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy />
                <!-- 表示单个文件最大多少容量，当单个文件达到10M后，会自动将以前的内容，先创建类似 2014-09（年-月）的目录，然后按 "xxx-年-月-日-序号"命名，打成压缩包 -->
                <SizeBasedTriggeringPolicy size="10MB" />
            </Policies>
            <Filters>
                <ThresholdFilter level="WARN"/>
                <ThresholdFilter level="ERROR" onMatch="DENY" onMismatch="NEUTRAL"/>
              </Filters>
            <!-- 表示压缩包，最多保留20个 -->
            <DefaultRolloverStrategy max="20" />
        </RollingRandomAccessFile>
        <RollingRandomAccessFile name="error" fileName="logs/claim-error.log" filePattern="${LOG_HOME}/$${date:yyyy-MM}/claim-error-%d{yyyy-MM-dd}-%i.log.gz">
        	<!-- 输出格式 -->
            <PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
            <Policies>
                <TimeBasedTriggeringPolicy />
                <!-- 表示单个文件最大多少容量，当单个文件达到10M后，会自动将以前的内容，先创建类似 2014-09（年-月）的目录，然后按 "xxx-年-月-日-序号"命名，打成压缩包 -->
                <SizeBasedTriggeringPolicy size="10MB" />
            </Policies>
                <Filters>
                <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
              </Filters>
            <!-- 表示压缩包，最多保留20个 -->
            <DefaultRolloverStrategy max="20" />
        </RollingRandomAccessFile>
    </Appenders>
    
    <Loggers>
        <Root level="ALL">
            <AppenderRef ref="console" />
            <AppenderRef ref="debug" />
            <AppenderRef ref="info" />
            <AppenderRef ref="warn" />
            <AppenderRef ref="error" />
        </Root>
        <Logger name="com.zisezhixin" level="ALL" additivity="true"/>
        <!-- 输出sql -->
        <Logger name="java.sql.PreparedStatement" level="DEBUG" additivity="true"/>
    </Loggers>
</Configuration>